<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>スクラム on yyh-gl's Tech Blog</title><link>https://yyh-gl.github.io/categories/%E3%82%B9%E3%82%AF%E3%83%A9%E3%83%A0/</link><description>Recent content in スクラム on yyh-gl's Tech Blog</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Wed, 05 Jun 2019 09:00:00 +0900</lastBuildDate><atom:link href="https://yyh-gl.github.io/categories/%E3%82%B9%E3%82%AF%E3%83%A9%E3%83%A0/index.xml" rel="self" type="application/rss+xml"/><item><title>スクラムについて学んだ話</title><link>https://yyh-gl.github.io/blog/scrum_entry/</link><pubDate>Wed, 05 Jun 2019 09:00:00 +0900</pubDate><guid>https://yyh-gl.github.io/blog/scrum_entry/</guid><description>スクラムとは 概要 変化に対し柔軟に開発を運用するためのアジャイルフレームワーク
開発に常に優先度をつける
仕事を進めることを主眼に考え、そのために改善を常に行う
ロールが3つあり、協調しあい開発する
プロダクトオーナー スクラムチーム 開発チーム POが満足するアウトプットがあったかのみを検証
5つのイベントがある（後述）
2つのアウトプット（成果物）がある（後述）
特徴 非常にシンプルなフレームワーク
定められたルールが他の手法より少なくアレンジが容易 実践的で経験主義
世界的に普及している
アジャイル開発とは アジャイルとスクラムの違い スクラムとはアジャイル開発手法のひとつ
他にもXPとかがある
アジャイルソフトウェア開発宣言 ここ にいろいろな言語で宣言されています
この宣言では以下のことを重要視している
個人と対話 動くソフトウェア 顧客との協調 変化への対応 スクラムとウォータフォールの違い ウォータフォール
計画、設計、実装、テストが一方向に進む リリース直前の実装や仕様に漏れがあると最悪の場合プロジェクトがぽしゃる 運用・保守には強い。新規案件向けではない スクラム
開発期間中に計画、設計、実装、テストのリサイクルを何度も回す 細かいスパンでリリースするので、大きな手戻りが少ない スクラムで登場するロール（役割） あくまでテンプレの内容を紹介
自分のチームに合わせて変えてOK（むしろカスタマイズすることが重要）
プロダクトオーナー（PO） 役割
プロダクトのビジネス価値に責任を持つ リリース判断をすることができる 優先度の判断役 求められる力
情報アウトプット（見える化、透明性） → 実現したいことをちゃんと伝える力 クライアントとチームを繋ぐハブ役 スクラムマスター（SM） 役割
スクラム開発に関わる全ての人を支援し、成功に導く POのビジネス的な相談を受けたり、開発チームの技術的な相談を受けたり などなど スクラムの理論や価値を関係者全員に教え、理解してもらう 開発チームへの障害や外部干渉を取り除き、防ぐ 求められる力
サーヴァントリーダシップ（奉仕型リーダー） 下からみんなを持ち上げるようなリーダー 理解と実行の話づくりと良きファシリテーター SMが開発に加わるのはOK？
チームが良しとするならばOK。
はじめから参加することは基本的にない。
開発チーム 役割
具体的な開発を遂行 リリース可能なプロダクトバックログアイテムを完成させる 何をどのように作るか決定する（POは実現したいものを言うが、どうやって作り上げるかは開発チームに委ねる） 求められる力</description></item></channel></rss>